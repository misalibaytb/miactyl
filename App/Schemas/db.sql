CREATE TABLE
    IF NOT EXISTS config (
        id SERIAL PRIMARY KEY,
        name VARCHAR(255) NOT NULL,
        value TEXT NOT NULL,
        CONSTRAINT unique_config UNIQUE (name)
    );

INSERT INTO
    config (name, value)
VALUES
    ('version', '1.0.0') ON DUPLICATE KEY
UPDATE value = '1.0.0';

INSERT INTO
    config (name, value)
VALUES
    ('cpu', '1') ON DUPLICATE KEY
UPDATE name = 'cpu';

INSERT INTO
    config (name, value)
VALUES
    ('memory', '1024') ON DUPLICATE KEY
UPDATE name = 'memory';

INSERT INTO
    config (name, value)
VALUES
    ('disk', '1024') ON DUPLICATE KEY
UPDATE name = 'disk';

INSERT INTO
    config (name, value)
VALUES
    ('slots', '1') ON DUPLICATE KEY
UPDATE name = 'slots';

INSERT INTO
    config (name, value)
VALUES
    ('ports', '0') ON DUPLICATE KEY
UPDATE name = 'ports';

CREATE TABLE
    IF NOT EXISTS users (
        id SERIAL PRIMARY KEY,
        username VARCHAR(255) NOT NULL,
        email VARCHAR(255) NOT NULL,
        pterodactyl BIGINT (20) NOT NULL,
        CONSTRAINT unique_user UNIQUE (username, email, pterodactyl)
    );

ALTER TABLE users
ADD COLUMN IF NOT EXISTS username VARCHAR(255) NOT NULL;

ALTER TABLE users
ADD COLUMN IF NOT EXISTS email VARCHAR(255) NOT NULL;

ALTER TABLE users
ADD COLUMN IF NOT EXISTS avatar VARCHAR(255) NOT NULL;

ALTER TABLE users
ADD COLUMN IF NOT EXISTS pterodactyl BIGINT NOT NULL;

ALTER TABLE users
ADD COLUMN IF NOT EXISTS cpu BIGINT NOT NULL DEFAULT 0;

ALTER TABLE users
ADD COLUMN IF NOT EXISTS memory BIGINT NOT NULL DEFAULT 0;

ALTER TABLE users
ADD COLUMN IF NOT EXISTS disk BIGINT NOT NULL DEFAULT 0;

ALTER TABLE users
ADD COLUMN IF NOT EXISTS slots BIGINT NOT NULL DEFAULT 0;

ALTER TABLE users
ADD COLUMN IF NOT EXISTS coins BIGINT NOT NULL DEFAULT 0;

ALTER TABLE users
ADD COLUMN IF NOT EXISTS role VARCHAR(255) NOT NULL DEFAULT 'user';

ALTER TABLE users
ADD COLUMN IF NOT EXISTS access_token VARCHAR(255) NOT NULL;

ALTER TABLE users
ADD COLUMN IF NOT EXISTS refresh_token VARCHAR(255) NOT NULL;

ALTER TABLE users
ADD COLUMN IF NOT EXISTS created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP;

ALTER TABLE users
ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP;

CREATE TABLE
    IF NOT EXISTS errors (id SERIAL PRIMARY KEY);

ALTER TABLE errors
ADD COLUMN IF NOT EXISTS message TEXT;

ALTER TABLE errors
ADD COLUMN IF NOT EXISTS stack TEXT;

ALTER TABLE errors
ADD COLUMN IF NOT EXISTS file TEXT;

ALTER TABLE errors
ADD COLUMN IF NOT EXISTS line TEXT;

ALTER TABLE errors
ADD COLUMN IF NOT EXISTS created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP;

ALTER TABLE errors
ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP;

CREATE TABLE
    IF NOT EXISTS logs (id SERIAL PRIMARY KEY);

ALTER TABLE logs
ADD COLUMN IF NOT EXISTS method TEXT;

ALTER TABLE logs
ADD COLUMN IF NOT EXISTS path TEXT;

ALTER TABLE logs
ADD COLUMN IF NOT EXISTS headers TEXT;

ALTER TABLE logs
ADD COLUMN IF NOT EXISTS body TEXT;

ALTER TABLE logs
ADD COLUMN IF NOT EXISTS response TEXT;

ALTER TABLE logs
ADD COLUMN IF NOT EXISTS created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP;

ALTER TABLE logs
ADD COLUMN IF NOT EXISTS updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP;